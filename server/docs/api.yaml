info:
  title: Financial Dashboard API
  description: >-
    #### API documentation
  version: 1.0.0
  contact: dpuljic01@gmail.com
components:
  schemas:
    User:
      description: User details
      content:
        application/json:
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: Stonk
              last_name:
                type: string
                example: Stonkings
              email:
                type: string
                format: email
                example: stonks@stonks.com
              id:
                type: string
                format: uuid
                example: "1e19e3d0-28c4-4a2b-a58d-389fbbd906c5"
  responses:
    BadRequest:
      description: Invalid payload or some other client related error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                example: >-
                  {
                    "message": {
                      "email": [
                        "Missing data for required field."
                      ]
                      "wrongfield": {
                        "Unknown field."
                      }
                    }
                  }
    Unauthorized:
      description: Invalid credentials
      content:
        application/json:
          schema:
            type: object
            example: >-
              {
                "authenticated": false,
                "confirmed": false,
                "message": "Invalid credentials"
              }
    Conflict:
      description: Entry already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Email already exists."
paths:
  /api/register:
    post:
      summary: Register user
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: User first name
                last_name:
                  type: string
                  description: User last name
                email:
                  type: string
                  format: email
                  description: User email
      responses:
        201:
          description: User sucessfully registered.
          $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        409:
          $ref: "#/components/responses/Conflict"
      tags:
        - auth
  /api/session/auth:
    post:
      summary: Login user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test_user@gmail.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  maxLength: 255
                  example: t3stpassw0rd
      security: []
      responses:
        "200":
          description: Returns user access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDEwNjk2MjQsIm5iZiI6MTYwMTA
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      tags:
        - auth
